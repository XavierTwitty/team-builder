[{"/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/index.js":"1","/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/reportWebVitals.js":"2","/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/App.js":"3","/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/components/Member.js":"4","/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/dummyData.js":"5","/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/components/Form.js":"6"},{"size":500,"mtime":1610934023617,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610934023622,"results":"9","hashOfConfig":"8"},{"size":630,"mtime":1611200425167,"results":"10","hashOfConfig":"8"},{"size":220,"mtime":1611198313846,"results":"11","hashOfConfig":"8"},{"size":1,"mtime":1611175811785,"results":"12","hashOfConfig":"8"},{"size":1320,"mtime":1611274761213,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3cxsyv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/index.js",[],["30","31"],"/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/reportWebVitals.js",[],"/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/App.js",["32"],"import ReactDom from \"react-dom\";\nimport Member from \"./components/Member\";\nimport Form from \"./components/Form\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [members, setMembers] = useState([\n    {\n      name: \"Bobby Joe\",\n      email: \"gobo@ggg.com\",\n      role: \"Student\",\n    },\n  ]);\n  // const addForm = (newForm) => {\n  //   setForm([...form, newForm]);\n  // };\n  console.log(members);\n  return (\n    <div>\n      <h1>Member Form</h1>\n      <Form members={members} setMembers={setMembers} />\n      {members.map((member) => (\n        <Member detail={member} />\n      ))}\n    </div>\n  );\n}\nexport default App;\n","/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/components/Member.js",[],"/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/dummyData.js",[],"/Users/xaviertwitty/Desktop/lambda/Unit2/team-builder/team-builder/src/components/Form.js",["33"],"import react, { useState } from \"react\";\n\nconst Form = (props) => {\n  // const { form, setForm } = props;\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    role: \"\",\n  });\n\n  const changeHandler = (event) => {\n    setForm({\n      ...form,\n      [event.target.name]: event.target.value,\n    });\n  };\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        props.setMembers([...props.members, form]);\n        setForm({ name: \"\", email: \"\", role: \"\" });\n        console.log(\"post submited\", props.members);\n      }}\n    >\n      <label htmlFor=\"name\"> Name: </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter Name Here\"\n        value={form.name}\n        onChange={changeHandler}\n      />\n      <label htmlFor=\"email\"> Email: </label>\n      <input\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Enter Email Here\"\n        value={form.email}\n        onChange={changeHandler}\n      />\n      <label htmlFor=\"role\" />\n      <select name=\"role\" onChange={changeHandler}>\n        <option value=\"Student\"> Student </option>\n        <option value=\"Teacher\"> Teacher </option>\n        <option value=\"Coach\"> Coach </option>\n      </select>\n      <button type=\"submit\"> Submit </button>\n    </form>\n  );\n};\nexport default Form;\n",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":13},{"ruleId":"36","replacedBy":"45"},{"ruleId":"38","replacedBy":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'ReactDom' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.",["47"],["48"],"no-global-assign","no-unsafe-negation"]